{"version":3,"sources":["App.tsx","components/GoodList/GoodList.tsx","index.tsx"],"names":["SortType","GoodList","goods","map","good","goodsFromServer","App","state","isReversed","sortType","NONE","sortByType","setState","reverseOrder","resetSorting","this","isReordered","reorderedGoods","visibleGoods","sort","curGood","nextGood","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","classNames","onClick","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAoBKA,E,iFCdQC,EAA4B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1C,OACE,6BACGA,EAAMC,KAAI,SAACC,GAAD,OACT,oBACE,UAAQ,OADV,SAIGA,GAFIA,SDLFC,G,YAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,Y,SAGGL,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA0CE,IAAMM,EAAb,4MACEC,MAAyB,CACvBC,YAAY,EACZC,SAAUT,EAASU,MAHvB,EAMEC,WAAa,SAACF,GACZ,EAAKG,SAAS,CAAEH,cAPpB,EAUEI,aAAe,WACb,EAAKD,UAAS,SAACL,GAAD,MAAY,CACxBC,YAAaD,EAAMC,gBAZzB,EAgBEM,aAAe,WACb,EAAKF,SAAS,CACZJ,YAAY,EACZC,SAAUT,EAASU,QAnBzB,4CAuBE,WAAU,IAAD,OACP,EAGIK,KAAKR,MAFPC,EADF,EACEA,WACAC,EAFF,EAEEA,SAEIO,EAAcP,IAAaT,EAASU,MAAQF,EAC5CS,EA5DH,SACLf,EADK,GAGJ,IADCO,EACF,EADEA,SAAUD,EACZ,EADYA,WAENU,EAAY,YAAOhB,GAmBzB,OAjBAgB,EAAaC,MAAK,SAACC,EAASC,GAC1B,OAAQZ,GACN,KAAKT,EAASsB,SACZ,OAAOF,EAAQG,cAAcF,GAE/B,KAAKrB,EAASwB,OACZ,OAAOJ,EAAQK,OAASJ,EAASI,OAEnC,QACE,OAAO,MAITjB,GACFU,EAAaQ,UAGRR,EAqCkBS,CACrBtB,EACA,CAAEG,aAAYC,aAGhB,OACE,sBAAKmB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYrB,IAAaT,EAASsB,WAEtCS,QAAS,WACP,EAAKpB,WAAWX,EAASsB,WAP7B,iCAaA,wBACEO,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYrB,IAAaT,EAASwB,SAEtCO,QAAS,WACP,EAAKpB,WAAWX,EAASwB,SAP7B,4BAaA,wBACEK,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAatB,IAEjBuB,QAAShB,KAAKF,aANhB,qBAWCG,GACC,wBACEa,KAAK,SACLD,UAAU,4BACVG,QAAShB,KAAKD,aAHhB,sBAUJ,cAAC,EAAD,CAAUZ,MAAOe,WArFzB,GAAyBe,aE3DzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.aecbdc56.chunk.js","sourcesContent":["import { Component } from 'react';\nimport classNames from 'classnames';\nimport { GoodList } from './components/GoodList';\nimport 'bulma/css/bulma.css';\n\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((curGood, nextGood) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return curGood.localeCompare(nextGood);\n\n      case SortType.LENGTH:\n        return curGood.length - nextGood.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortByType = (sortType: SortType) => {\n    this.setState({ sortType });\n  };\n\n  reverseOrder = () => {\n    this.setState((state) => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  resetSorting = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const {\n      isReversed,\n      sortType,\n    } = this.state;\n    const isReordered = sortType !== SortType.NONE || isReversed;\n    const reorderedGoods = getReorderedGoods(\n      goodsFromServer,\n      { isReversed, sortType },\n    );\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              { 'is-light': sortType !== SortType.ALPHABET },\n            )}\n            onClick={() => {\n              this.sortByType(SortType.ALPHABET);\n            }}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n            onClick={() => {\n              this.sortByType(SortType.LENGTH);\n            }}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-warning',\n              { 'is-light': !isReversed },\n            )}\n            onClick={this.reverseOrder}\n          >\n            Reverse\n          </button>\n\n          {isReordered && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.resetSorting}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <GoodList goods={reorderedGoods} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\ntype Props = {\n  goods: string[],\n};\n\nexport const GoodList: React.FC<Props> = ({ goods }) => {\n  return (\n    <ul>\n      {goods.map((good) => (\n        <li\n          data-cy=\"Good\"\n          key={good}\n        >\n          {good}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}